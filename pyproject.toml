# ------------------------------ #
# PACKAGE, BUILD, AND DEPENDENCY #
# ------------------------------ #

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

# support for PEP 621: https://github.com/python-poetry/roadmap/issues/3
[tool.poetry]
name = "timeoff"
authors = ["Tiffany Huang <hello@tifa.io>"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
description = "Track vacation hours accrued"
keywords = ["time off", "vacation", "pto"]
repository = "https://github.com/tifa/timeoff"
license = "MIT"
packages = [{ include = "timeoff", from = "src" }]
readme = "README.md"
version = "0.0.6"  # placeholder, set by poetry-dynamic-versioning
# TODO: homepage
# TODO: documentation

[tool.poetry.dependencies]
python = "^3.8"
questionary = "^2.0.1"
tabulate = "^0.9.0"

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry.scripts]
timeoff = "timeoff.commands:main"

[tool.poetry.urls]
"Tracker" = "https://github.com/tifa/timeoff/issues"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
coverage = { version = "^7.3.2", extras = ["toml"] }
pre-commit = "^3.5.0"
pytest = "^7.3.1"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"
pytest-xdist = "^3.5.0"
ruff = "^0.0.269"
tox = "^4.11.4"

# ----- #
# TESTS #
# ----- #

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38,39,310,311,312}
isolated_build = true

[gh-actions]
python =
  3.8: py38
  3.9: py39
  3.10: py310
  3.11: py311
  3.12: py312

[testenv]
allowlist_externals = poetry
depends =
  coverage: py{38,39,310,311,312}
commands =
  poetry run pytest
"""

[tool.pytest.ini_options]
addopts = "-n auto --cov=timeoff --cov-append --cov-report=term-missing -vv"
testpaths = ["tests"]

[tool.coverage.run]
branch = true

# --------------- #
# LINT AND FORMAT #
# --------------- #

[tool.black]
line-length = 120

[tool.ruff]
target-version = "py38"
line-length = 120
exclude = ["docs"]
select = [
  "F",    # Pyflakes
  "E",    # pycodestyle
  "I",    # isort
  "N",    # pep8-naming
#  "D",    # pydocstyle
  "YTT",  # flake8-2020
  "B",    # flake8-bugbear
  "A",    # flake8-builtins
  "COM",  # flake8-commas
  "C4",   # flake8-comprehensions
#  "DTZ",  # flake8-datetimez
  "EM",   # flake8-errmsg
  "EXE",  # flake8-executable
  "ISC",  # flake8-implicit-str-concat
  "ICN",  # flake8-import-conventions
  "G",    # flake8-logging-format
  "INP",  # flake8-no-pep420
  "PIE",  # flake8-pie
  "T20",  # flake8-print
  "PT",   # flake8-pytest-style
  "Q",    # flake8-quotes
  "RSE",  # flake8-raise
  "RET",  # flake8-return
  "SLF",  # flake8-self
  "SIM",  # flake8-simplify
  "TID",  # flake8-tidy-imports
  "TCH",  # flake8-type-checking
  "INT",  # flake8-gettext
  "ARG",  # flake8-unused-arguments
  "PTH",  # flake8-use-pathlib
  "TD",   # flake8-todos
  "PGH",  # pygrep-hooks
  "PL",   # Pylint
  "TRY",  # tryceratops
  "FLY",  # flynt
  "NPY",  # NumPy-specific rules
  "RUF",  # Ruff-specific rules
]
ignore = [
  "PGH003",  # use specific rule codes when ignoring type issues (mypy conflict)
]

[tool.ruff.per-file-ignores]
"examples/*" = ["INP001"]  # implicit namespace, missing __init__.py
"src/timeoff/__init__.py" = ["F401"]
"src/timeoff/commands.py" = ["T201"]
"src/timeoff/prompts.py" = ["T201"]
"src/timeoff/schedules.py" = ["T201"]
